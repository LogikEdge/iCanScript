/////////////////////////////////////////////////////////////////
//  MyBehaviourClass.cs
//  Implementation of MyBehaviourClass
//  Generated by iCanScript
//  Created on: 06/27/2013 09:41:34
/////////////////////////////////////////////////////////////////

using UnityEngine;

public sealed class MyBehaviourClass : iCS_BehaviourImp {

	void Update()
	{
		RunMessage("Update");
	}

	void LateUpdate()
	{
		RunMessage("LateUpdate");
	}

	void FixedUpdate()
	{
		RunMessage("FixedUpdate");
	}

	void Start()
	{
		RunMessage("Start");
	}

	void Reset()
	{
		RunMessage("Reset");
	}

	void OnMouseEnter()
	{
		RunMessage("OnMouseEnter");
	}

	void OnMouseOver()
	{
		RunMessage("OnMouseOver");
	}

	void OnMouseExit()
	{
		RunMessage("OnMouseExit");
	}

	void OnMouseDown()
	{
		RunMessage("OnMouseDown");
	}

	void OnMouseUp()
	{
		RunMessage("OnMouseUp");
	}

	void OnMouseUpAsButton()
	{
		RunMessage("OnMouseUpAsButton");
	}

	void OnMouseDrag()
	{
		RunMessage("OnMouseDrag");
	}

	void OnBecameVisible()
	{
		RunMessage("OnBecameVisible");
	}

	void OnBecameInvisible()
	{
		RunMessage("OnBecameInvisible");
	}

	void OnEnable()
	{
		RunMessage("OnEnable");
	}

	void OnDisable()
	{
		RunMessage("OnDisable");
	}

	void OnDestroy()
	{
		RunMessage("OnDestroy");
	}

	void OnPreCull()
	{
		RunMessage("OnPreCull");
	}

	void OnPreRender()
	{
		RunMessage("OnPreRender");
	}

	void OnPostRender()
	{
		RunMessage("OnPostRender");
	}

	void OnRenderObject()
	{
		RunMessage("OnRenderObject");
	}

	void OnWillRenderObject()
	{
		RunMessage("OnWillRenderObject");
	}

	void OnGUI()
	{
		RunMessage("OnGUI");
	}

	void OnRenderImage()
	{
		RunMessage("OnRenderImage");
	}

	void OnDrawGizmosSelected()
	{
		RunMessage("OnDrawGizmosSelected");
	}

	void OnDrawGizmos()
	{
		RunMessage("OnDrawGizmos");
	}

	void OnServerInitialized()
	{
		RunMessage("OnServerInitialized");
	}

	void OnConnectedToServer()
	{
		RunMessage("OnConnectedToServer");
	}

	void OnAudioFilterRead()
	{
		RunMessage("OnAudioFilterRead");
	}

	void OnAnimatorMove()
	{
		RunMessage("OnAnimatorMove");
	}

	void OnApplicationQuit()
	{
		RunMessage("OnApplicationQuit");
	}

	void OnTriggerEnter(Collider other)
	{
		RunMessage("OnTriggerEnter", other);
	}

	void OnTriggerExit(Collider other)
	{
		RunMessage("OnTriggerExit", other);
	}

	void OnTriggerStay(Collider other)
	{
		RunMessage("OnTriggerStay", other);
	}

	void OnCollisionEnter(Collision collisionInfo)
	{
		RunMessage("OnCollisionEnter", collisionInfo);
	}

	void OnCollisionExit(Collision collisionInfo)
	{
		RunMessage("OnCollisionExit", collisionInfo);
	}

	void OnCollisionStay(Collision collisionInfo)
	{
		RunMessage("OnCollisionStay", collisionInfo);
	}

	void OnControllerColliderHit(ControllerColliderHit hit)
	{
		RunMessage("OnControllerColliderHit", hit);
	}

	void OnJointBreak(float breakForce)
	{
		RunMessage("OnJointBreak", breakForce);
	}

	void ParticleCollision(GameObject gameObject)
	{
		RunMessage("ParticleCollision", gameObject);
	}

	void OnLevelWasLoaded(int level)
	{
		RunMessage("OnLevelWasLoaded", level);
	}

	void OnApplicationPause(bool pause)
	{
		RunMessage("OnApplicationPause", pause);
	}

	void OnApplicationFocus(bool focus)
	{
		RunMessage("OnApplicationFocus", focus);
	}

	void OnPlayerConnected(NetworkPlayer player)
	{
		RunMessage("OnPlayerConnected", player);
	}

	void OnPlayerDisconnected(NetworkPlayer player)
	{
		RunMessage("OnPlayerDisconnected", player);
	}

	void OnDisconnectedFromServer(NetworkDisconnection mode)
	{
		RunMessage("OnDisconnectedFromServer", mode);
	}

	void OnFailedToConnect(NetworkConnectionError error)
	{
		RunMessage("OnFailedToConnect", error);
	}

	void OnFailedToConnectToMasterServer(NetworkConnectionError error)
	{
		RunMessage("OnFailedToConnectToMasterServer", error);
	}

	void OnMasterServerEvent(MasterServerEvent msEvent)
	{
		RunMessage("OnMasterServerEvent", msEvent);
	}

	void OnNetworkInstantiate(NetworkMessageInfo info)
	{
		RunMessage("OnNetworkInstantiate", info);
	}

	void OnSerializeNetworkView(BitStream stream, NetworkMessageInfo info)
	{
		RunMessage("OnSerializeNetworkView", stream, info);
	}

	void OnAnimatorIK(int layerIndex)
	{
		RunMessage("OnAnimatorIK", layerIndex);
	}

}
