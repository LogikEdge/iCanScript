{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f0\fs26 \cf0 \
Our goal in creating iCanScript is to simplify and accelerate scripting within Unity's development environment. iCanScript offers a visual alternative to traditional textual scripts enabling greater accessibility for both programmers and non-programmers.\
\
We believe that depicting the scripts allows for a larger community of talents to interact with the high-level logic that drive your games.  It simplifies the understanding of the overall structure to all individuals in your production.\
\
_So can visual scripts replace all textual scripts in a production?_\
\
Probably not... The fact is that visual and textual scripts have different strengths and weaknesses.\
\
Visual scripts excel at summarizing complex interactions that typically span multiple source files when implemented using textual scripts.  These interactions include:\
\
- mission control logic;\
- behaviour state charts;\
- gameplay logic; and\
- any high-level functional diagrams.\
\
Textual scripts are best at expressing tight calculations that can be implemented in a single source file.  The textual scripts can thereafter be integrated into iCanScript as building blocks of high-level logic.  These algorithms include:\
\
- calculation loops;\
- search loops;\
- complex mathematical expressions; and\
- large selectors (switch-case).\
\
We hope that you find the right balance in using iCanScript combined with traditional scripting methods to increase productivity and, more importantly, _
\f1\i HAVE MORE FUN_
\f0\i0  in writing your scripts.\
}