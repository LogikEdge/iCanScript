{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f0\fs26 \cf0 A visual script must be installed on the game object that will persist and run the visual script.  The installation is performed using the *iCanScript->Create Visual Script* or the Unity *Component* menus (see [Component Menus] for details).\
\
\
\
\
\
\
Two Unity script components are installed on the game object for each iCanScript visual script.  These components are:\
\
1.  ***iCS_VisualScript (persistent storage)***\
2.  ***iCS_Behaviour (runtime compiler & execution services)***\
\
\
[Figure <$n:figure>. iCanScript visual script components.]\
\
\
 The *iCS_VisualScript* contains the visual script persistant data including the definitions of nodes, ports, bindings as well as their layout information.  It is populated and modified by the iCanScript editors.\
\
 The *iCS_Behaviour* is dynamically created from the visual script data and includes the source code for the message handlers of the visual script.  It uses the execution services of the iCanScript engine library (i.e. iCanScriptEngine.dll) to manage the execution flow and resolve data contention (also known as deadlocks).\
\
>  **Note:**  You must delete the *iCS_VisualScript* component to remove the visual script from the game object.  The *iCS_Behaviour* component will be re-created if you delete it while the *iCS_VisualScript* is installed.\
\
[Back to Top][]\
}