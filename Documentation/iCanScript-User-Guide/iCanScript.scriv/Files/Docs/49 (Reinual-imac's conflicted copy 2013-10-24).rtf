{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f0\fs26 \cf0 iCanScript is designed to seamlessly integrated into the Unity development environment.  It builds on the philosophies and application programming interfaces (APIs) available to Unity script programmers.\
\
iCanScripts integrates with the following Unity concepts:\
\
*  Visual scripts are standard Unity 
\f1\i *Components*
\f0\i0 ; \
*  Each visual script is compiled into an Unity 
\f1\i *Behaviour*
\f0\i0  and executed as such;\
*  All Unity engine programming interfaces are available in the iCanScript library database; \
*  All 
\f1\i *Behaviour Messages*
\f0\i0  are implemented as 
\f1\i *Message Nodes*
\f0\i0 ;\
*  Visual script libraries are implemented with Unity 
\f1\i *Prefabs*
\f0\i0 ;\
*  Visual scripts are saved and loaded with the game object they are attached to;\
*  Visual scripts are compiled when starting the Unity engine.\
\
iCanScript extends the Unity Concepts with:\
\
*  Functional diagrams;\
*  State Chart diagrams;\
*  Automatic data driven execution sequencing;\
*  Automatic deadlock avoidance.\
\
!\{-note-\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f2\fs24 \cf0 {\*\shppict {\pict {\*\nisusfilename Postit Note_32x32} \picw32 \pich32 \picwgoal640 \pichgoal640 \pngblip 89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af4000000017352474200aece1ce9000007454944415458099d57cb6e1c45143dfd9ab13d36c649c0891c10a0201e62136583780990901008942f402c5920f6acf2050896b00116d9b04010a44820d688282b5014211048e6111c3bccc476c699f1747715e7dcea1af74022242aa9a9ae47d739f7dc7babcbf0dee3ea37c0b50bc04f5f010b7398292fb2b70fa4dbcbcba7b7d7d6dedbebf55e3b0f743f4c127cc67a81f5f199376edf79f76de0e85d615eb8aa797b39fbb8396e8f00237613240fe7cf3cfd56b276fcd1f4e2c527d2efbebb9e3a3748c93b49929fcad9576edbab2aee95cc4e4f09884c9ee3d0abcf231fd164900c52f89343e4d5ceb1778a574e3fe776b7e1b7b7574ffcfcf3b9feeeaeebcdcd57f578fcfefdf7e0e3ec30060519a5aa091cf7f26cb58b2cb0f1b5a3a8cb125b1c09e39a920c7bdf27e0c4c3a3313e5a5a4cef74cee935a080af36a9d299d5fbe64e9c2efc6800bfbe8ebd4b97f0f9788cfb4f3c8843db435c7e6ce3fa91d7d13fbe0274083cdf855f5c84eff07d6d23abf30cd8ec63efd197f02c7186c2553105ce9e03568f60f1a953e9c9aa78ba8b749e1c256c85e4be1afea15f517e761ed9628e6ca78f1f087e93b3ded5e8ac2ca377796365a7df5b39b2c8b1a446563bec4f1c1ce7a3b12241233ddb1e0787ac568cc01b6780a74e012f3ce1f7abec8e6ed2390eb8118364c2452592371731eefd88c1a757b07e6382cbdc658516a45b5b7094092b39f24e0779e1d1ed5005d63455900510b57a2c2bc6b3c742180dbff458288cfec4d90b644d60037754a19a2059ca90bc75021b671ec2fa528e55ee788c8e5d180e311a5ec7fe937338b696e0ce2560a99760ae2120df0b591e5500928046387b50da4198725f860d577b917024a15860cb370bd478e0540ff5dbf76274f62ae67fd9c7cde504bb2f2c60ede52e8e1f7698a702b21cb4c4feb1955115b753a50bc4a77b00dfc4403320762c158149972d08ca306c8854a073f0c88b2b189cec60d81f13b0c6dadd1ecb7324988ab8ded70fabfecb720173ab9a2db3cbd1c85b13205366846acd1f823abe65e07c9344a21a0b192d3d9aa35eed701de34371428d354f7bf90e6da7298e1b56ec0a5cd554082ed051d738675681cc5c606021034c097387c84435c2736660354d224ab4ba691db3a0aafc147cc2eda4c078620a2808999426f1c149c87d140366bd52302a105410a85c2112b2b6a58a08d858687586d4b29eaf98f5048f2ed8270102336d78c435651a84ec5b0c0417285a5409ca34546b848d80c0032105a8b947b1c267fdab6b59ee31295945a221a023814a2840da98071dce5816c8af5ee9a756c0667903387d0e3e8fd9121570747aa55aaa254d5623a1d7c995646aaa2cf955adb4d904590c54e740db72eed0ce0ead9951419607d089591f802765d210a1b889973a9cb5f26f0264660482d58c6c5380bacd049f80951141726e69a6d58de5139290fc65c56f4b4d70172abd6269cad8d8274ec32130992ac05166814f525ae6945aa64420d03e17a6cf362fcb2ba6581d80e9f7b24c09ce5d48422e702491f2b35814a562604402b2c2e24d14a604f81c1450fe2741fe6029fb16e94d1634d26b4e1f9b7a0a4ea7103ce47bca4c4869086f12fc6e643909e4a5d2708f49a20fcc548536017a49ae52a8360a28ca69693884443cf6054ecb29bd457913e913495f9104c15565534ef0bc48f891f2d8b9810115d06de3960a709c7826ad481e9c7ed11de1a4a38b94ebf27b9372f2b7fc5eb98c8ad0f2063ccb52141d9100e6ba1e5736d1e7c6ba73dd5a014eb0c852a560083011311798f5210075d295ac3ae182d504af0378e533ee2ed08cb29300af494556a1cbe367fd0aae71f3db12902e545b878fe493dc3adf0f08c8154ab752d233da43a029d8e47bc94e709f87a0a3d902eff08a54a43c006a5fdf1c61d058c8cd4399c6803255b7960048d34820f85e6b59ed880d878c594d2f59ba11bc94f58e77315a9f65bc9cc8ea82c0a640816eba8bd1083bbcf0ea3e38051785290175ac507a060a0bd729fa49c92cb7f3bdb693ad52d0d1624b37823b57707546cb052ee959d9768c00039019f0db15f4af5ec3efdc90921e9429015a6fd711d86738ae910a0c3dca1ebe6eca73059c1daba1e55ccda33be1be495ed1797220e9d0909cb1d4614c1dbec3e1eb3fb1f1e7163609ad20fb77101605125ea97a25af60343614b6ba41c8629de919db84c92a5ff1e6cd56f701eec65b10cf1aca0f4fa31db1abbd09b6fbfbd818ece08f8d2d5cfbe0137cdb002b0d45c24a5420e5a2fed92ff0252d5dd49e36cb5f1da3f204cf1bcf83e43a4f37869f4f18129ed5f18adda7e28e733b0cb29dad3e06172fa1bff9178612c7ce291e940d9ef25b04a671607f17d0227da379a9b6ca3bb91d142241bbacd829d9f43516ab26e39ad86a4cebd58f402198f88717c7948a37e85a33322a204934a985bab3c70d225024c029db58fd583516816cd3668d9e351ec1d54a81993ffe22018e9b4c922a5a12c135a7a27e1b2092d4986a7c2faee1908dc77e2412d76b7e9a86edc17f02695ddc44cf91587b2c3eb7dfd5daff2c6d05e2e2b899faede738ff7fc6dbefce3cff0dbe68f08b0a171a690000000049454e44ae426082}}
\f3\b\fs26  
\f0\b0 Proper usage of iCanScript requires minimal knowledge of the Unity platform.\
!-note-\}\
\
In this section, we examine the core constructs of iCanScript with the help of a small example.  Establishing the storyline for the example and building the Unity scene are prerequisites to using iCanScript.\
\
\
### Example Storyline\
\
If you are like me, and I like to assume you are, I prefer learning the workings of a tool in the context of a small example.  So let's create ourself a storyline from which we can extract various examples while examining the constructs of iCanScript.\
\
Here goes the story:\
\
>  In the land of Emptiness live Mr. Cube.  Mr. Cube has a busy life roaming around on an invisible 2D plane.  Since Mr. Cube is a close relative of Mr. Fly, he is attracted to Ms. Light that also lives in the land of Emptiness. Little does Mr. Cube know is that Ms. Light is shy and she get "turned off" if anyone comes to close to her.  When in the dark, Mr. Cube panics and runs around in any direction.  Luckily for Mr. Cube, Ms. Light gets "turned on" when Mr. Cube is far enough from her.\
\
> (Wow! we got romance, terror and deception. What a great plot!)\
\
\
### Setting Up the Scene\
\
Before we create visual scripts, we first need to build a scene in Unity and populate it with the actors.  For our storyline, we have the following actors (we have purposely omitted the camera):\
* Mr. Cube (I guess you know what shape to use here)\
* Ms. Light (a directional light);\
* Near Trigger Zone to turn off Ms. Light (a sphere will do fine)\
* Far Trigger Zone to turn on Ms. Light (again a sphere will do fine)\
\
The following are the main characteristics of our actors:\
* All actors live on a plane with the Y-axes set to zero (0);\
* Ms. Light and both Trigger Zones are centred at (0,0,0);\
* Both Trigger Zones are configured to trigger on collision;\
* The Near Trigger Zone will be 2m in diameter;\
* The Far Trigger Zone will be 3m in diameter;\
* Mr. Cube is 1m in dimensions;\
* Mr. Cube includes a *Rigid Body* component to generate collision triggers;\
}