{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-BoldItalic;
}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f0\fs26 \cf0 \
<$u=
\f1\b **\ul The Novice and Intermediate Programmer:\ulnone **
\f0\b0 > The novice programmer will greatly benefit from the immense Unity library available for visual scripting. The programmer will find enjoyable the ability to create 
\f2\i\b _**state charts**_
\f0\i0\b0  and 
\f2\i\b _**data flow diagrams**_
\f0\i0\b0  in a visual and coherent environment. The ability to _**
\f2\i\b aggregate multiple functions and state charts
\f0\i0\b0 **_ into a _**
\f2\i\b package node
\f0\i0\b0 **_ combined with the _**
\f2\i\b unlimited nesting
\f0\i0\b0 **_ capabilities of iCanScript provides a sandbox to design at multiple levels of abstraction.\
\
<$u=
\f1\b **\ul The Expert Programmer:\ulnone **
\f0\b0 > For the expert programmer, iCanScript _**
\f2\i\b complements textual scripting with visual scripting
\f0\i0\b0 **_. Using .NET reflection and optional meta-attributes, textual scripts can easily be published to the iCanScript library. Therefore, the _**
\f2\i\b programmer remains in full control over the scripting workflow
\f0\i0\b0 **_ deciding when and where visual scripting benefits the overall project.\
\
<$u=
\f1\b **\ul Non-Technical Individual:\ulnone **
\f0\b0 > iCanScript visual environment greatly simplifies the 
\f2\i\b _**understanding of script structure**_
\f0\i0\b0  for all individuals including non-technical individuals. By removing the "needy greedy" details of programming languages, iCanScript allows the 
\f2\i\b _**non-technical individual to create or modify simple scripts**_
\f0\i0\b0 . The creation of large and maintainable scripts require a minimal knowledge of programming structures (even with visual scripting) and may prove to be challenging for non-technical individuals.\
\
}