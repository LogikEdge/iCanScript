{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker Req)}{\leveltext\leveltemplateid1\'04Req);}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker Req)}{\leveltext\leveltemplateid101\'04Req);}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker Req)}{\leveltext\leveltemplateid201\'04Req);}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\pard\tx202\tx1096\li1094\fi-1095\sb120\sa80\pardirnatural
\ls1\ilvl0
\f0\fs24 \cf0 Local Anchor Position Attribute (persistent)\
\pard\tx202\tx1096\li1094\fi-1095\sb120\sa80\pardirnatural
\ls2\ilvl0\cf0 {\listtext	Req)	}The local node anchor position is a persistent attribute that maintains the user desired position to the parent node before collision resolution.  The anchor position is local (relative) to the parent node.  The anchor position of the root node is an exception as it is a global position.\
\pard\tx202\tx1096\li1094\fi-1095\sb120\sa80\pardirnatural
\ls3\ilvl0\cf0 {\listtext	Req)	}The local anchor position of a node shall be set when the user drags that node.  The local anchor position is computed by subtracting the node\'92s global display position from the parent\'92s global position.  The local anchor position of the children nodes shall not be affect.  The global display position of children nodes shall be updated to reflect the change in the parent\'92s global position.\
{\listtext	Req)	}The local anchor position shall not be changed when performing a fold/unfold/iconize operation.\
{\listtext	Req)	}The local anchor position shall not be changed if a node is resized while the node is not on its anchor (display position is offset from the globalized anchor position).\
{\listtext	Req)	}The local anchor position shall be changed if a parent node is resize resulting from a user drag of one of its children or grandchildren while it is on its anchor (display and globalized anchor position are the same).  The local anchor position is computed by subtracting the node\'92s global display position from the parent\'92s global position.  The visible child node display position shall not be affected by the change of anchor position.  The children local anchor position shall be update with the delta of the parent global display position such that its globalized anchor position is not changed.\
{\listtext	Req)	}The local anchor position shall not be changed if a parent node is resize resulting from a fold/unfold/iconize operation of one of its children or grandchildren.\
Globalized Anchor Position (transient)\
{\listtext	Req)	}The globalized anchor position is the position of the anchor in global space computed by adding the parent global display position to the node\'92s local anchor position.\
Global Display Position (persistent)\
{\listtext	Req)	}The node display position is a persistent attribute that maintains the final global display position of the node after the collision algorithm has been applied.\
{\listtext	Req)	}The node display position is recalculated if:\
{\listtext	\'95	}The anchor position of the node is changed;\
{\listtext	\'95	}If the display size of the node is changed;\
{\listtext	\'95	}If the parent global display position has changed;\
\'95	The node is involved in a new collision (collision resolution);\
{\listtext	\'95	}If the globalized anchor and display position differ and one of the node(s) that forced an offset has changed display position (collision resolution).\
Display Size (transient)\
{\listtext	Req)	}The display size shall be dynamically computed to include:\
{\listtext	\'95	}The node name and fold/unfold/iconize icons (header width);\
{\listtext	\'95	}The node ports and port names (left & right padding);\
{\listtext	\'95	}The visible children using their display position and size.\
{\listtext	Req)	}The display size shall be recalculated under the following conditions:\
{\listtext	\'95	}The node display state is changed (folded/unfolded/iconized);\
{\listtext	\'95	}A child node is moved;\
{\listtext	\'95	}A child node is animated.\
{\listtext	Req)	}Recomputing the display size shall not change the global anchor or display position of the children nodes.\
Node Collisions\
{\listtext	Req)	}Node collision shall always performed using the display position and display size.\
{\listtext	Req)	}Detection of nodes causing an offset from the anchor position shall be determined by finding the closest colliding node(s) in the corridor between the current display position and the anchor position.\
{\listtext	Req)	}A new collision shall be created when the display positions of two or more nodes overlap considering the inter-node margin.\
{\listtext	Req)	}Node collision resolution shall not interfere with user drag operation.  The user drag always take precedence over collision resolution.\
Animated Position (transient)\
{\listtext	Req)	}The node animated position is a transient attribute that maintains the node position has it is animated when changing position.  This attribute shall be used for all position changes that are automatically generated by the system.\
{\listtext	Req)	}The animated position shall be identical to the display position when the user drags the object.\
Node Scale\
{\listtext	Req)	}The node scale is a persistent attribute used to increase/decrease the node size while maintaining the relative children position.}